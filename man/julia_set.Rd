% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/julia-set.R
\name{julia_set}
\alias{julia_set}
\alias{set_seed}
\alias{set_map}
\alias{set_threads}
\alias{set_states_init}
\alias{set_move}
\alias{set_timeline}
\alias{set_path}
\alias{set_model_types}
\alias{set_models}
\alias{set_parameters}
\alias{set_yobs_via_sim}
\alias{set_datasets}
\alias{set_yobs_via_datasets}
\alias{set_pf_filter}
\title{Julia: set objects in Julia}
\usage{
set_seed(.seed = 123L)

set_map(.x)

set_threads(.threads)

set_states_init(.xinit, .state)

set_move(.cmd)

set_timeline(.timeline)

set_path()

set_model_types(.models)

set_models(.models)

set_parameters(.parameters)

set_yobs_via_sim()

set_datasets(.datasets)

set_yobs_via_datasets(.datasets, .models)

set_pf_filter(.n_move, .n_resample, .n_record, .direction)
}
\value{
Exported functions return \code{invisible(NULL)}.
}
\description{
These are functions that assign objects to variable names in Julia.
}
\details{
The following functions are exported:
\itemize{
\item \code{\link[=set.seed]{set.seed()}} sets a seed in both \code{R} and \code{Julia}.
\itemize{
\item It is often a good idea to call \code{\link[=set_seed]{set_seed()}} at the start of your workflow.
}
\item \code{\link[=set_map]{set_map()}} exports a \code{\link{SpatRaster}} map of the study area to a variable named \code{env} in \code{Julia}.
\itemize{
\item Export the map at the start of your workflow.
}
}

Other functions are internal.
}
\examples{
if (julia_run()) {

  # Connect to Julia
  julia_connect()

  # Set the seed in `R` and `Julia`
  set_seed(1)

  # Define a map of the study area & export
  # > This map defines the region(s) within which movements are allowed
  # > set_map() makes it available to `Julia` routines
  map <- dat_gebco()
  terra::plot(map)
  set_map(map)

}

}
\author{
Edward Lavender
}
\keyword{internal}
