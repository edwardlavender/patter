% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pf-pou.R
\name{pf_pou}
\alias{pf_pou}
\title{PF: map probability-of-use}
\usage{
pf_pou(.history, .bathy, .plot = TRUE, ...)
}
\arguments{
\item{.history}{The (processed) particle samples, provided as:
\itemize{
\item A \code{list} of \code{\link{data.table}}s that define cell samples; i.e., the \code{history} element of a \code{\linkS4class{pf}} object. This must contain a column that defines cell samples at each time step named \code{cell_now}.
\item A \code{character} string that defines the directory in which particle samples were written (as parquet files).
}}

\item{.bathy}{A \code{\link{SpatRaster}} that defines the grid for the utilisation distribution. \code{NAs} on \code{.bathy} are used as a mask.}

\item{.plot}{A logical input that defines whether or not to plot the \code{\link{SpatRaster}}.}

\item{...}{If \code{.plot = TRUE}, \code{...} is a place holder for additional arguments passed to \code{\link[terra:plot]{terra::plot()}}.}
}
\value{
The function returns a \code{\link{SpatRaster}} (utilisation distribution) in which cell values define probability-of-use.
}
\description{
This function builds a 'probability-of-use' utilisation distribution from (processed) particle samples.
}
\details{
Probability-of-use is the proportion of samples of each unique cell (out of the total number of samples across all time steps).
}
\examples{
#### Set up examples

# (A) Define input datasets
acoustics <- dat_acoustics[individual_id == 25, ]
archival <- dat_archival[individual_id == 25, ]
obs <- acs_setup_obs(acoustics, archival, "2 mins", 500)
obs <- obs[1:200, ]
gebco <- dat_gebco()

# (B) Implement AC* algorithm
containers <- acs_setup_detection_containers(gebco, dat_moorings)
overlaps <- acs_setup_detection_overlaps(containers, dat_moorings)
kernels <-
  acs_setup_detection_kernels(dat_moorings,
                              .calc_detection_pr = acs_setup_detection_pr,
                              .bathy = gebco)
ac_folder <- file.path(tempdir(), "ac")
dir.create(ac_folder)
out_ac <-
  acs(obs,
      .bathy = gebco,
      .detection_overlaps = overlaps,
      .detection_kernels = kernels,
      .save_record = TRUE)

# (C) Implement forward simulation
forward_folder <- file.path(tempdir(), "pf", "forward")
dir.create(forward_folder, recursive = TRUE)
out_pf <- pf_forward(.obs = obs,
                     .record = out_ac$record,
                     .n = 1e3,
                     .kick = pf_kick,
                     .bathy = gebco,
                     .save_history = TRUE,
                     .write_history = list(sink = forward_folder))

# (D) Implement backward pass
# * TO DO

#### Example (1): Calculate POU from pf object
pou_1 <- pf_pou(.history = out_pf$history, .bathy = gebco)

#### Example (2): Calculate POU from parquet files
pou_2 <- pf_pou(.history = forward_folder, .bathy = gebco)
stopifnot(terra::all.equal(pou_1, pou_2))

#### Example (3): Customise plot via ...
pou <- pf_pou(.history = forward_folder,
              .bathy = gebco,
              col = grDevices::cm.colors(100))
get_hr_full(pou, .add = TRUE, lwd = 0.25)
get_hr_core(pou, .add = TRUE, lwd = 0.75)

# Clean up
unlink(ac_folder, recursive = TRUE)
unlink(forward_folder, recursive = TRUE)
}
\author{
Edward Lavender
}
