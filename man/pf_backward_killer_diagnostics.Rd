% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pf_backward_killer.R
\name{pf_backward_killer_diagnostics}
\alias{pf_backward_killer_diagnostics}
\title{PF: backward killer diagnostics}
\usage{
pf_backward_killer_diagnostics(.history, ...)
}
\arguments{
\item{.history}{Particle samples, provided in any format accepted by \code{\link[=.pf_history_dt]{.pf_history_dt()}}.}

\item{...}{Arguments passed to \code{\link[=.pf_history_dt]{.pf_history_dt()}}, excluding \code{.collect} with is necessarily \code{TRUE}.}
}
\value{
The function returns a \code{\link{data.table}} with the following columns:
\itemize{
\item \code{timestep}---an \code{integer} that defines the time step;
\item \code{n}---an \code{integer} that defines the number of particles;
\item \code{n_u}---an \code{integer} that defines the number of unique location samples (see \code{\link[=.pf_diag_nu]{.pf_diag_nu()}});
\item \code{ess}---a \code{double} that defines the effective sample size (see \code{\link[=.pf_diag_ess]{.pf_diag_ess()}});
}
}
\description{
This function calculates diagnostics from particle samples from \code{\link[=pf_backward_killer]{pf_backward_killer()}}.
}
\details{
Particle diagnostics are fully described in \code{\link{pf_diag}}.
}
\examples{
#### Example (1): Calculate diagnostics from objects in memory
diag <- dat_pfbk() |> pf_backward_killer_diagnostics()
head(diag)

#### Example (2): Calculate diagnostics from parquet files
pfb_folder <- system.file("extdata", "acpf", "backward", "killer",
                          package = "patter", mustWork = TRUE)
diag_2 <- pf_backward_killer_diagnostics(pfb_folder)
stopifnot(all.equal(diag, diag_2))

#### Example (3): Analyse diagnostics
# Define helper function
plot_loess <- function(x, y,
                       xlab = deparse(substitute(x)),
                       ylab = deparse(substitute(y)), ...) {
  plot(x, y,
       xlab = xlab, ylab = ylab,
       type = "l")
  lines(loess.smooth(x, y), col = "royalblue", lwd = 2)
}
# Plot time series
pp <- par(mfrow = c(1, 3))
plot_loess(diag$timestep, diag$n)
plot_loess(diag$timestep, diag$n_u)
plot_loess(diag$timestep, diag$ess)
par(pp)
}
\seealso{
\itemize{
\item \code{\link[=pf_forward]{pf_forward()}}, \code{\link[=pf_backward_killer]{pf_backward_killer()}} and \code{\link[=pf_backward_sampler]{pf_backward_sampler()}} implement the forward simulation and the backward pass;
\item \code{\link[=pf_forward_diagnostics]{pf_forward_diagnostics()}} and \code{\link[=pf_backward_killer_diagnostics]{pf_backward_killer_diagnostics()}} collect diagnostics;
\item \code{\link{.pf_diag}}\verb{_()} functions are internal routines that calculate diagnostic statistics;
}
}
\author{
Edward Lavender
}
