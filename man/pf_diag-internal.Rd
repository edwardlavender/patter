% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pf_diag.R
\name{pf_diag-internal}
\alias{pf_diag-internal}
\alias{.pf_diag_any}
\alias{.pf_diag_nu}
\alias{.pf_diag_ess}
\alias{.pf_diag}
\alias{.pf_diag_bind}
\alias{.pf_diag_collect}
\title{PF: particle diagnostics (internal)}
\usage{
.pf_diag_any(.particles)

.pf_diag_nu(.cells)

.pf_diag_ess(.likelihood)

.pf_diag(.particles, .t, .trial = NA_integer_, .label)

.pf_diag_bind(.diagnostics)

.pf_diag_collect(.diagnostics, .iter_m, .iter_i)
}
\description{
These are internal functions that calculate diagnostic statistics from selected particle samples.
}
\section{Particle diagnostics}{
Particle diagnostics measure how the diversity of particle samples evolves through time. Current diagnostic metrics include the number of unique particle samples at each time step and the effective sample size. Particle diagnostics have multiple uses:
\itemize{
\item \strong{Convergence.} Diagnostics from the forward run can indicate the causes of convergence failures. This is possible because \code{\link[=pf_forward]{pf_forward()}} keeps track of diagnostics at every stage of the algorithm, recording at each time step the diversity of particle proposals, the diversity remaining after each likelihood function evaluation and the diversity following (re)-sampling. See \code{\linkS4class{pf_particles}} and \code{vignette("d-demos", package = "patter")} for an illustration.
\item \strong{Sampling.} Diagnostics indicate sampling sufficiency. In general, a low ratio of the number of unique particles to the total number of particles indicates effective coverage of the possible locations of an individual.
\item \strong{Particle degeneracy.} Diagnostics measure particle degeneracy, i.e., the decay in the number of unique particles through time as trajectories are rendered invalid by observations. Comparison of particle diagnostics between \code{\link[=pf_backward_killer]{pf_backward_killer()}} and \code{\link{pf_backward_sampler}}\verb{_*()} is particularly valuable in this context. Both functions perform a backward refinement of particles from \code{\link[=pf_forward]{pf_forward()}}; however, the former is simple but fast, while the latter is sophisticated but expensive. Tracking particle diagnostics can indicate whether \code{\link[=pf_backward_sampler]{pf_backward_sampler()}} is worth the cost.
}
}

\section{Internal routines}{
\itemize{
\item \code{\link[=.pf_diag_any]{.pf_diag_any()}} identifies whether or not any particle samples remain;
\item \code{\link[=.pf_diag_nu]{.pf_diag_nu()}} counts the number of unique particle samples (grid cells);
\item \code{\link[=.pf_diag_ess]{.pf_diag_ess()}} calculates effective sample size from particle likelihoods;
\item \code{\link[=.pf_diag]{.pf_diag()}} is a wrapper function that calculates diagnostics;
\item \code{\link[=.pf_diag_bind]{.pf_diag_bind()}} binds \code{list}s of diagnostics together;
\item \code{\link[=.pf_diag_collect]{.pf_diag_collect()}} wraps \code{\link[=.pf_diag_bind]{.pf_diag_bind()}} and assigns required columns;
}
}

\section{Exported wrappers}{
In \code{\link[=pf_forward]{pf_forward()}}, convergence diagnostics are necessarily calculated on the fly by \code{\link{.pf_diag}}\verb{_()} functions. To collate convergence diagnostics from \code{\link[=pf_forward]{pf_forward()}}, use \code{\link[=pf_diag_convergence]{pf_diag_convergence()}}. However, note that the forward simulation necessitates the calculation of multiple diagnostics at each time step and \code{\link[=pf_diag_convergence]{pf_diag_convergence()}} attempts to collate all diagnostics in memory, which is not memory safe.

To collate summary diagnostics from \code{\link[=pf_forward]{pf_forward()}} or \code{\link[=pf_backward_*]{pf_backward_*()}}, use \code{\link[=pf_diag_summary]{pf_diag_summary()}}. This function calculates a single set of diagnostics is calculated for each time step, so this function is (effectively) memory safe.
}

\seealso{
\itemize{
\item \code{\link[=pf_forward]{pf_forward()}} and \code{\link[=pf_backward_*]{pf_backward_*()}} implement the forward simulation and the backward pass;
\item \code{\link[=pf_diag_convergence]{pf_diag_convergence()}} and \code{\link[=pf_diag_summary]{pf_diag_summary()}} collect diagnostics;
\item \code{\link{.pf_diag}}\verb{_()} functions are internal routines that calculate diagnostic statistics;
}
}
\author{
Edward Lavender
}
\keyword{internal}
