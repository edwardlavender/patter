% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pf_map.R
\name{pf_map_pou}
\alias{pf_map_pou}
\title{PF: map probability-of-use}
\usage{
pf_map_pou(.history, .bathy, .plot = TRUE, ...)
}
\arguments{
\item{.history}{The (processed) particle samples, provided as:
\itemize{
\item A \code{list} of \code{\link{data.table}}s that define cell samples; i.e., the \code{history} element of a \code{\linkS4class{pf}} object. This must contain a column that defines cell samples at each time step named \code{cell_now}.
\item A \code{character} string that defines the directory in which particle samples were written (as parquet files).
}}

\item{.bathy}{A \code{\link{SpatRaster}} that defines the grid for the utilisation distribution. \code{NAs} on \code{.bathy} are used as a mask.}

\item{.plot}{A logical input that defines whether or not to plot the \code{\link{SpatRaster}}.}

\item{...}{If \code{.plot = TRUE}, \code{...} is a place holder for additional arguments passed to \code{\link[terra:plot]{terra::plot()}}.}
}
\value{
The function returns a \code{\link{SpatRaster}} (utilisation distribution) in which cell values define probability-of-use.
}
\description{
This function builds a 'probability-of-use' utilisation distribution from (processed) particle samples.
}
\details{
Probability-of-use is the proportion of samples of each unique cell (out of the total number of samples across all time steps).
}
\examples{
#### Workflow
# A. Define input datasets (see ?`acs_setup_obs()`)
# B. Implement forward simulation (see ?`acs()`, ?`dc()` and ?`pf_forward_*()`)
# C. Implement backwards pass (see ?`pf_backward()`)
# D. Implement `pf_path()`, `pf_map_pou()` etc.

#### Set up examples using pre-defined datasets
# Define required datasets (e.g., observations, bathymetry grid)
obs        <- dat_obs()
gebco      <- dat_gebco()
# Collect pre-defined particle samples from forward simulation
dat_pff    <- dat_pff()
# Implement backwards pass
con        <- tempdir()
pfb_folder <- file.path(con, "patter", "pf", "backward")
dir.create(pfb_folder, recursive = TRUE)
out_pfb <- pf_backward(dat_pff$history,
                       .save_history = TRUE,
                       .write_history = list(sink = pfb_folder))

#### Example (1): Calculate POU from pf object
pou_1 <- pf_map_pou(.history = out_pfb$history, .bathy = gebco)

#### Example (2): Calculate POU from parquet files
pou_2 <- pf_map_pou(.history = pfb_folder, .bathy = gebco)
stopifnot(terra::all.equal(pou_1, pou_2))

#### Example (3): Customise plot via ...
pou <- pf_map_pou(.history = pfb_folder,
                  .bathy = gebco,
                  col = grDevices::cm.colors(100))
get_hr_full(pou, .add = TRUE, lwd = 0.25)
get_hr_core(pou, .add = TRUE, lwd = 0.75)

# Clean up
unlink(pfb_folder, recursive = TRUE)
}
\seealso{
\itemize{
\item The PF (forward simulation) is implemented by \code{\link[=pf_forward]{pf_forward()}};
\item PF is supported by:
\itemize{
\item Setup helpers, namely \code{\link[=pf_setup_files]{pf_setup_files()}};
\item Template movement models, namely \code{\link[=pf_kick]{pf_kick()}};
}
\item The backward pass is implemented by \code{\link[=pf_backward]{pf_backward()}};
\item Movement paths are built from PF outputs via \code{pf_path()} functions:
\itemize{
\item \code{\link[=pf_path]{pf_path()}} reconstructs paths;
\item \code{\link[=pf_path_pivot]{pf_path_pivot()}} supports path reconstruction;
}
\item To reconstruct maps of space use, see:
\itemize{
\item \code{\link[=pf_coords]{pf_coords()}} to extract particle coordinates;
\item \code{\link[=pf_map_pou]{pf_map_pou()}} for probability-of-use maps;
\item \code{\link[=pf_map_dens]{pf_map_dens()}} for smooth utilisation distributions;
\item \code{\link[=get_hr]{get_hr()}} for home range estimates;
}
}
}
\author{
Edward Lavender
}
