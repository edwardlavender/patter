% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pf-setup.R
\name{pf_setup_files}
\alias{pf_setup_files}
\title{PF set up: list files for PF}
\usage{
pf_setup_files(.root, ...)
}
\arguments{
\item{.root}{A string that defines the directory in which files are located.}

\item{...}{Additional arguments passed to \code{\link[=list.files]{list.files()}}, such as \code{pattern}, excluding \code{full.names}.}
}
\value{
The function returns an ordered \code{list} of file paths.
}
\description{
This function creates an ordered \code{list} of files for PF, either from an AC* algorithm (i.e., \code{\link[=acs]{acs()}} or \code{\link[=dc]{dc()}}) for the forward simulation (\code{\link[=pf_forward]{pf_forward()}}), or from the forward simulation (\code{\link[=pf_forward]{pf_forward()}}) for the backward pass (\code{\link[=pf_backward]{pf_backward()}}).
}
\examples{
# Quick implementation of AC algorithm
acoustics <- dat_acoustics[individual_id == 25, ]
archival <- dat_archival[individual_id == 25, ]
obs <- acs_setup_obs(acoustics, archival, "2 mins", 500)
obs <- obs[1:10, ]
gebco <- dat_gebco()
dat_moorings$receiver_range <- 500
containers <- acs_setup_detection_containers(gebco, dat_moorings)
# (For speed only, ignore overlaps)
# overlaps <- acs_setup_detection_overlaps(containers, dat_moorings)
kernels <-
  acs_setup_detection_kernels(dat_moorings,
                              .calc_detection_pr = acs_setup_detection_pr,
                              .bathy = gebco)
folder <- file.path(tempdir(), "ac")
dir.create(folder)
out_ac <-
  acs(obs,
      .bathy = gebco,
      .detection_kernels = kernels,
      .write_record = list(filename = folder, overwrite = TRUE))

# List files
pf_setup_files(folder)

# Clean up
unlink(folder, recursive = TRUE)

}
\author{
Edward Lavender
}
