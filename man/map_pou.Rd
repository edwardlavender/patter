% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map.R
\name{map_pou}
\alias{map_pou}
\title{Map: probability-of-use}
\usage{
map_pou(
  .map,
  .coord,
  .plot = TRUE,
  ...,
  .verbose = getOption("patter.verbose")
)
}
\arguments{
\item{.map}{A \code{\link{SpatRaster}} that defines the grid for probability-of-use estimation.}

\item{.coord}{Coordinates, provided in any format accepted by \code{\link[=.map_coord]{.map_coord()}}}

\item{.plot}{A logical input that defines whether or not to plot the \code{\link{SpatRaster}}.}

\item{...}{If \code{.plot = TRUE}, \code{...} is a place holder for additional arguments passed to \code{\link[terra:plot]{terra::plot()}}.}

\item{.verbose}{User output control (see \code{\link{patter-progress}} for supported options).}
}
\value{
The function returns a \code{\link{SpatRaster}}.
}
\description{
This function builds a 'probability-of-use' utilisation distribution.
}
\details{
Probability-of-use is calculated via \code{\link[=.map_coord]{.map_coord()}} (and \code{\link[=.map_mark]{.map_mark()}}). If a single dataset of unweighted coordinates is provided, probability-of-use is simply the proportion of records in each grid cell. If a time series of unweighted coordinates is provided, probability-of-use is effectively the average proportion of records in each grid cell. This becomes a weighted average if coordinates are weighted. Weights are normalised to sum to one and the result can be interpreted as a utilisation distribution in which cell values define probability-of-use.
}
\examples{
#### Set up examples
# Packages
require(data.table)
require(dplyr, warn.conflicts = FALSE)
# Define grid
gebco <- dat_gebco()

#### Example (1): Use sample coordinates
# Sample example coordinates
cxy <-
  gebco |>
  terra::spatSample(size = 5000L, xy = TRUE, cell = TRUE, na.rm = TRUE) |>
  select("x", "y") |>
  as.data.table()
# Use x, y coordinates
map_pou(gebco, .coord = cxy)
# Other formats are acceptable
map_pou(gebco, .coord = as.matrix(cxy))
map_pou(gebco, .coord = as.data.frame(cxy))
# cell_x and cell_y coordinates are acceptable
map_pou(gebco, .coord = cxy[, .(cell_x = x, cell_y = y)])

#### Example (2): Use coordinates from coa()
# Use example dataset
out_coa <- dat_coa()
map_pou(gebco, .coord = out_coa[, .(x = coa_x, y = coa_y)])

#### Example (3): Use a time series of coordinates from pf_*()
# Use example dataset
coord <- pf_coord(dat_pfbk(), .bathy = gebco)
map_pou(gebco, .coord = coord)
}
\author{
Edward Lavender
}
