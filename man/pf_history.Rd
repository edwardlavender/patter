% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pf_history-internal.R
\name{pf_history}
\alias{pf_history}
\alias{.pf_history_list}
\alias{.pf_history_read}
\alias{.pf_history_write}
\alias{.pf_history_cols}
\alias{.pf_history_elm}
\alias{.pf_history_dt}
\title{PF: access particle histories}
\usage{
.pf_history_list(.history, ...)

.pf_history_read(.history)

.pf_history_write(.record)

.pf_history_cols(.history, .record, .input_cols, .output_cols = NULL)

.pf_history_elm(
  .history,
  .elm,
  .read = .pf_history_read(.history),
  .cols = NULL,
  ...
)

.pf_history_dt(.history, ..., .collect = TRUE)
}
\arguments{
\item{.history}{The particle samples. In \code{\link[=.pf_history_list]{.pf_history_list()}} and \code{\link[=.pf_history_dt]{.pf_history_dt()}}, these can be supplied as:
\itemize{
\item A \code{\linkS4class{pf_particles}} object;
\item The \code{history} element of a \code{\linkS4class{pf_particles}} object;
\item A \code{character} string that defines the directory containing parquet files;
\item A \code{list} of file paths (e.g., from \code{\link[=pf_files]{pf_files()}});
}

For \code{\link[=.pf_history_read]{.pf_history_read()}}, \code{\link[=.pf_history_elm]{.pf_history_elm()}} and \code{\link[=.pf_history_cols]{.pf_history_cols()}}, \code{.history} should be a \code{list}.

All functions also silently accept (and return) \code{NULL}.}

\item{...}{Additional arguments:
\itemize{
\item In \code{\link[=.pf_history_list]{.pf_history_list()}}, \code{...} is passed to \code{\link[=pf_files]{pf_files()}} if \code{.history} is a directory;
\item In \code{\link[=.pf_history_elm]{.pf_history_elm()}}, \code{...} is passed to \code{\link[arrow:read_parquet]{arrow::read_parquet()}} is \code{.read = TRUE}. \code{col_select} is controlled via \code{.cols} and not permitted;
\item In \code{\link[=.pf_history_dt]{.pf_history_dt()}}: \code{...}  is passed to \code{\link[arrow:open_dataset]{arrow::open_dataset()}} if \code{.history} is a directory.
}}

\item{.record, .input_cols, .output_columns}{Additional arguments for \code{\link[=.pf_history_write]{.pf_history_write()}} and \code{\link[=.pf_history_cols]{.pf_history_cols()}}:
\itemize{
\item \code{.record} is a named \code{list} of output options, from \code{\link[=pf_opt_record]{pf_opt_record()}}.
\item \code{.input_cols} and \code{.output_cols} are \code{character} vectors that define essential input and output columns;
}}

\item{.elm, .read, .cols}{Additional arguments for \code{\link[=.pf_history_elm]{.pf_history_elm()}}:
\itemize{
\item \code{.elm} is an \code{integer} that defines the \code{list} index.
\item \code{.read} is a \code{logical} variable that defines whether or not to read particle samples from file.
\item (optional) \code{.cols} is a \code{character} vector of columns to select, for \code{\link[=.pf_history_elm]{.pf_history_elm()}}.
}}

\item{.collect}{For \code{\link[=.pf_history_dt]{.pf_history_dt()}}, if \code{.history} is a directory, \code{.collect} is a \code{logical} variable that defines whether or not to collect the dataset in memory.}
}
\value{
If \code{.history = NULL}, \code{NULL} is returned. Otherwise:
\itemize{
\item \code{\link[=.pf_history_list]{.pf_history_list()}} returns a list of \code{\link{data.table}}s (options 1 and 2) or file paths (options 3 and 4);
\item \code{\link[=.pf_history_read]{.pf_history_read()}} and \code{\link[=.pf_history_write]{.pf_history_write()}} each return a \code{logical} variable;
\item \code{\link[=.pf_history_cols]{.pf_history_cols()}} returns a named \code{list};
\item \code{\link[=.pf_history_elm]{.pf_history_elm()}} returns a \code{\link{data.table}} for particle samples for a single time step;
\item \code{\link[=.pf_history_dt]{.pf_history_dt()}} returns a \code{\link{data.table}} or an \code{\link[arrow:Dataset]{arrow::FileSystemDataset}} (if \code{.history} is a directory and \code{.collect = FALSE}).
}
}
\description{
These functions function access or collate particle histories.
\itemize{
\item \code{\link[=.pf_history_list]{.pf_history_list()}} \code{list}s particle histories or file pointers;
\item \code{\link[=.pf_history_read]{.pf_history_read()}} distinguishes particle histories in memory versus on file;
\item \code{\link[=.pf_history_write]{.pf_history_write()}} defines whether or not to write particle histories to file;
\item \code{\link[=.pf_history_cols]{.pf_history_cols()}} validates input and output columns;
\item \code{\link[=.pf_history_elm]{.pf_history_elm()}} accesses particle histories for a specific \code{list} element;
\item \code{\link[=.pf_history_dt]{.pf_history_dt()}} collates particle histories into a single \code{\link{data.table}};
}
}
\section{List particle samples}{
\code{\link[=.pf_history_list]{.pf_history_list()}} lists particle samples or file pointers. There are four implementation options:
\enumerate{
\item If \code{.history} is a  \code{\linkS4class{pf_particles}} object, the function returns the \code{history} element.
\item If \code{.history} is the \code{history} element of a \code{\linkS4class{pf_particles}} object, it is returned unchanged.
\item If \code{.history} is a folder, \code{\link[=pf_files]{pf_files()}} is used to return a \code{list} of file paths.
\item If \code{.history} is a list of file paths, they are returned unchanged.
}

This function is used in iterative routines, supported by \code{\link[=.pf_history_elm]{.pf_history_elm()}}.
}

\section{Collate particle samples}{
\code{\link[=.pf_history_dt]{.pf_history_dt()}} collates all particle samples. There are three implementation options:
\enumerate{
\item If \code{.history} is a \code{\linkS4class{pf_particles}} object, or the \code{history} element of such an object, \code{data.table::rbindlist(..., fill = TRUE)} is used to combine particle samples.
\item If \code{.history} is a folder, \code{\link[arrow:open_dataset]{arrow::open_dataset()}} plus (optionally) \code{\link[dplyr:compute]{dplyr::collect()}} is used. Additional arguments, such as \code{schema} can be passed to \code{\link[arrow:open_dataset]{arrow::open_dataset()}} via \code{...}.
\item If \code{.history} is a \code{list} of parquet files, files are iteratively read into memory (via \code{\link[arrow:read_parquet]{arrow::read_parquet()}}) and combined (via \code{data.table::rbindlist(..., fill = TRUE)}. This option is much slower than option 2.
}
}

\examples{
\dontrun{

# .pf_history_dt() examples

require(arrow)

# Use pf_particles-class object
.pf_history_dt(dat_pfbk())

# Use `history` element
.pf_history_dt(dat_pfbk()$history)

# Use directory (and optionally select a subset of columns)
pfbk_folder <- dat_pfbk_
sch <- schema(timestep = int32(),
              cell_now = int32(),
              x_now = double(),
              y_now = double())
.pf_history_dt(pfbk_folder, schema = sch)

# Use directory with `.collect = FALSE`
.pf_history_dt(pfbk_folder, schema = sch, .collect = FALSE)

# Use a file list
.pf_history_dt(pf_files(pfbk_folder))
}

}
\author{
Edward Lavender
}
\keyword{internal}
