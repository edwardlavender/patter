% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sims-internal.R
\name{sim_path_flux}
\alias{sim_path_flux}
\alias{.sim_path_flux}
\alias{.flux_template}
\alias{.step_using_flux}
\alias{.step}
\alias{.step_iter}
\alias{.sim_path_pivot}
\alias{.flux_pivot}
\title{Simulate movement paths}
\usage{
.sim_path_flux(
  .bathy = rast_template(),
  .origin = NULL,
  .n_step = 10L,
  .flux,
  .flux_vals = .flux_template(.n_step, .n_path),
  .move = .step_using_flux,
  .n_path = 1L,
  .plot = TRUE,
  .one_page = FALSE
)

.flux_template(.n_step, .n_path)

.step_using_flux(.xy_now, .xy_next, .fv, .t)

.step(
  .xy_now,
  .xy_next = matrix(NA, nrow = nrow(.xy_now), ncol = 2L),
  .length = rtruncgamma(nrow(.xy_now)),
  .angle = rwn(nrow(.xy_now))
)

.step_iter(.xy_now, .xy_next, .flux, .fv, .t, .move, .bathy)

.sim_path_pivot(.mat, .n_step, .n_path)

.flux_pivot(.fv, .n_step = ncol(.fv), .n_path = nrow(.fv))
}
\description{
These functions facilitate the simulation of animal movement paths. \code{\link[=.sim_path_flux]{.sim_path_flux()}} implements the simulation. A \code{\link{SpatRaster}} (\code{.bathy}) defines the area of the simulation. A starting location (\code{.origin}) on \code{.bathy} can be specified or  sampled at random from \code{.bathy}. \code{.n_path} movement path(s) from this point are simulated using time-specific ('flux') parameters (such as step lengths and turning angles). To implement this approach, a 'flux template' must be provided, which is a list of \code{\link{data.table}}s that will hold the 'flux' parameters for each time step and can be updated by reference. The default \code{\link[=.flux_template]{.flux_template()}} function generates a list with placeholders for simulated step lengths and turning angles. The \code{.flux()} function is used to simulate the new values of any flux parameters at each time step and update (by reference) the flux template. \code{.move} is a function that defines new proposal locations based on the simulated flux values. For example, \code{\link[=.step_using_flux]{.step_using_flux()}}, which wraps \code{\link[=.step]{.step()}}, defines proposal locations based on simulated step lengths and turning angles. Internally, \code{.move} is wrapped within \code{\link[=.step_iter]{.step_iter()}} and implemented iteratively to ensure that simulated location(s) at each time step are valid (in non NA cells on \code{.bathy}).
}
\details{
\itemize{
\item \code{\link[=.flux_template]{.flux_template()}} defines a list of \code{\link{data.table}} objects in which the simulated step lengths and turning angles for each step are stored;
\item \code{\link[=.step_using_flux]{.step_using_flux()}} and \code{\link[=step]{step()}} are functions which, given current location(s), calculates new locations, based on step lengths and turning angles;
\item \code{\link[=.step_iter]{.step_iter()}} is an internal wrapper for \code{\link[=.step]{.step()}} that validates proposal steps into new locations;
\item \code{\link[=.sim_path_pivot]{.sim_path_pivot()}} and \code{\link[=.flux_pivot]{.flux_pivot()}} reorientate simulated paths/flux values;
\item \code{\link[=.sim_path_flux]{.sim_path_flux()}} simulates the movement path(s);
}
}
\author{
Edward Lavender
}
\keyword{internal}
