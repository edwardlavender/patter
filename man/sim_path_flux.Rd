% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sims-internal.R
\name{sim_path_flux}
\alias{sim_path_flux}
\alias{.sim_path_flux}
\alias{.flux_template}
\alias{.cstep_using_flux}
\alias{.cstep_iter}
\alias{.sim_path_pivot}
\alias{.flux_pivot}
\title{Simulate movement paths}
\usage{
.sim_path_flux(
  .bathy = spatTemplate(),
  .lonlat = FALSE,
  .origin = NULL,
  .n_step = 10L,
  .flux,
  .flux_vals = .flux_template(.n_step, .n_path),
  .move = .cstep_using_flux,
  .n_path = 1L,
  .plot = TRUE,
  .one_page = FALSE
)

.flux_template(.n_step, .n_path)

.cstep_using_flux(.xy_now, .xy_next, .lonlat, .fv, .t)

.cstep_iter(
  .xy_now,
  .xy_next = matrix(NA, nrow = nrow(.xy_now), ncol = ncol(.xy_now)),
  .lonlat,
  .flux,
  .fv,
  .t,
  .move,
  .bathy
)

.sim_path_pivot(.mat, .n_step, .n_path)

.flux_pivot(.fv, .n_step = ncol(.fv), .n_path = nrow(.fv))
}
\description{
Internal functions that support the simulation of movement paths.
\itemize{
\item \code{\link[=.sim_path_flux]{.sim_path_flux()}} simulates the movement path(s) from flux parameters that are generated dynamically at each time step. This is supported by the following helpers:
\itemize{
\item \code{\link[=.flux_template]{.flux_template()}} defines a list of \code{\link{data.table}} objects in which the simulated 'flux' parameters (e.g., step lengths and turning angles) for each step are stored;
\item \code{\link[=.cstep_using_flux]{.cstep_using_flux()}} and \code{\link[=cstep]{cstep()}} are functions which, given current location(s), calculate new locations, based on step lengths and turning angles;
\item \code{\link[=.cstep_iter]{.cstep_iter()}} is an internal wrapper for \code{\link[=cstep]{cstep()}} that validates proposal steps into new locations;
\item \code{\link[=.sim_path_pivot]{.sim_path_pivot()}} and \code{\link[=.flux_pivot]{.flux_pivot()}} reorientate simulated paths/flux values;
}
}
}
\details{
These functions facilitate the simulation of animal movement paths.
\itemize{
\item \code{\link[=.sim_path_flux]{.sim_path_flux()}} implements the simulation.
\itemize{
\item A \code{\link{SpatRaster}} (\code{.bathy}) defines the area of the simulation.
\item A starting location (\code{.origin}) on \code{.bathy} can be specified or  sampled at random from \code{.bathy}.
\item \code{.n_path} movement path(s) from this point are simulated using time-specific ('flux') parameters (such as step lengths and turning angles).
}
\item To implement this approach, a 'flux template' must be provided (to the \code{.flux_vals} argument), which is a list of \code{\link{data.table}}s that will hold the 'flux' parameters for each time step and can be updated by reference.
\itemize{
\item The default \code{\link[=.flux_template]{.flux_template()}} function generates a list with place holders for simulated step lengths and turning angles.
}
\item The \code{.flux} argument is a function that is used to simulate the new values of any flux parameters at each time step and update (by reference) the flux template (i.e., \code{.flux_vals}). This must accept \code{.fv}, \code{.row} and \code{.col} arguments, as implemented in \code{\link[=.step_iter]{.step_iter()}}.
\item \code{.move} is a function that defines new proposal locations based on the simulated flux values.
\itemize{
\item For example, \code{\link[=.cstep_using_flux]{.cstep_using_flux()}}, which wraps \code{\link[=cstep]{cstep()}}, defines proposal locations based on simulated step lengths and turning angles.
}
\item Internally, \code{.move} is wrapped within \code{\link[=cstep_iter]{cstep_iter()}} and implemented iteratively to ensure that simulated location(s) at each time step are valid (in non NA cells on \code{.bathy}).
}
}
\author{
Edward Lavender
}
\keyword{internal}
