% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models.R
\name{ModelMove}
\alias{ModelMove}
\alias{move_xy}
\alias{.model_move}
\alias{ModelMoveXY}
\alias{ModelMoveXYZD}
\alias{move_xyzd}
\title{Movement models}
\usage{
move_xy(
  length = "truncated(Gamma(1, 250.0), upper = 750.0)",
  angle = "Uniform(-pi, pi)"
)

move_xyzd(
  length = "truncated(Gamma(1.0, 750.0), upper = 750.0)",
  angle_delta = "Normal(0, 0.5)",
  z_delta = "Normal(0, 3.5)"
)
}
\arguments{
\item{length, angle, angle_delta, z_delta}{Character strings that define movement model components:
\itemize{
\item \code{length}---the distribution of step lengths;
\item \code{angle}---the distribution of turning angles;
\item \code{angle_delta}---the distribution of changes in turning angles;
\item \code{z_depth}---the distribution of changes in depth
}}
}
\description{
These functions formulate movement model constructors for export to \code{Julia}. Function arguments should be specified as \code{character} strings of Julia code that specify the distributions for components of the movement model.
}
\details{
\code{.move} is a \code{character} that defines a movement model structure implemented in Julia (that is, a \code{ModelMove} constructor). \verb{.move_*()} functions are convenience wrappers for the construction of movement models. Currently implemented options are:
\itemize{
\item \code{\link[=move_xy]{move_xy()}}, which specifies a movement model in terms of the distribution of step lengths and turning angles;
\item \code{\link[=move_xyzd]{move_xyzd()}}, which specifies a movement model in terms of the distribution of step lengths, changes in turning angles and changes in depth;
}

\verb{move_*()} functions are used to formulate the movement model for use in simulations and algorithms:
\itemize{
\item \code{move_xy()} specifies a two-dimensional (x, y) movement model parametrised in terms of step lengths and turning angles;
\item \code{move_xyzd()} specifies a four-dimensional movement model (x, y, z and d) parametrised in terms of step lengths, changes in depth and changes in turning angle;
}

\verb{move_*()} functions map onto \code{MoveModel} structure in \href{https://github.com/edwardlavender/Patter.jl}{\code{Patter.jl}}.
}
\examples{
# Patter contains multiple built-in `State` and `ModelMove` subtypes that you can use
# ... (with custom parameters) simulate movements and for particle filtering.
# See the help file for `?State` to use a new subtype.
}
\seealso{
The routines in \code{\link{patter}} for the simulation of individual movements, observations and statistical modelling are built upon three Abstract Types defined in \code{Julia}:
\itemize{
\item See \code{\link{State}} for individual-state (location) structures;
\item See \code{\link{ModelMove}} for movement model structures;
\item See \code{\link{ModelObs}} for observation model structures;
}
}
\author{
Edward Lavender
}
