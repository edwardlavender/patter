% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulations.R
\name{sim_path_walk}
\alias{sim_path_walk}
\title{Simulation: movement walks}
\usage{
sim_path_walk(
  .state = "StateXY",
  .xinit = NULL,
  .map,
  .n_path = 1L,
  .move,
  .n_step = 10L,
  .timestamp = NULL,
  .plot = TRUE,
  .one_page = FALSE
)
}
\arguments{
\item{.state}{A \code{character} that defines the state (see \code{\link{glossary}}).}

\item{.xinit, .map, .n_path}{Initial state arguments.
\itemize{
\item \code{.xinit} specifies the initial states for the simulation (one for each movement path).
\itemize{
\item If \code{.xinit} is \code{NULL}, initial states are sampled from \code{.map}.
\item If \code{.xinit} is a \code{\link{data.frame}} with one column for each state dimension.
}
\item \code{.map} is a \code{\link{SpatRaster}} that defines the area within which movements are simulated that is required if \code{.xinit = NULL} (see \code{\link{glossary}}.
\item \code{.n_path} is an \code{integer} that defines the number of paths to simulate.
}}

\item{.move}{A character string that defines the movement model (see \code{\link{move}} and \code{\link{glossary}}).}

\item{.n_step}{An \code{integer} that defines the number of time steps.}

\item{.timestamp}{(optional) A vector of time stamps, one for each time step, for inclusion in the output \code{\link{data.table}} as a \code{timestamp} column.}

\item{.plot, .one_page}{Plot options.
\itemize{
\item \code{.plot} is a \code{logical} variable that defined whether or not to plot \code{.map} and simulated path(s). Each path is plotted on a separate plot.
\item \code{.one_page} is a logical variable that defines whether or not to produce all plots on a single page.
}}
}
\value{
\code{\link[=sim_path_walk]{sim_path_walk()}} returns a \code{\link{data.table}} with the following columns:
\itemize{
\item \code{path_id}---an \code{integer} vector that identifies each path;
\item \code{timestep}---an \code{integer} vector that defines the time step;
\item \code{timestamp}---(optional) a \code{POSIXct} vector of time stamps;
\item \code{cell_id}, \code{cell_x}, \code{cell_y}, \code{cell_z}---\code{integer}/\code{numeric} vectors that define the locations of the simulated positions on \code{.map};
\item \code{x},\code{y},\code{...}---\code{numeric} vectors that define the components of the state;
}
}
\description{
\code{\link[=sim_path_walk]{sim_path_walk()}} simulates discrete-time animal movement paths from walk models (e.g., random walks, biased random walks, correlated random walks).
}
\details{
This function simulates movement paths via \code{Patter.sim_walk()}:
\itemize{
\item The internal function \code{\link[=set_initial_states]{set_initial_states()}} is used to set the initial state(s) for the simulation; that is, initial coordinates and other variables (one for each \code{.n_path}). If \code{.state} is one of the built-in options (see \code{\link{glossary}}), initial state(s) can be sampled from \code{.map}. Otherwise, a \code{\link{data.frame}} of initial states must be provided. Initial states provided in the \code{\link{data.frame}} are  re-sampled, with replacement, if required, such that there is one initial state for each simulated path. Initial states are assigned to an \code{xinit} object in Julia, which is a vector of \code{State} structures.
\item Using the initial states, the Julia function \code{Patter.sim_walk()} simulates movements using the movement model.
\item The resultant movement paths are brought back into \code{R} for convenient visualisation and analysis.
}

To use a new \code{.state}, you need to:
\itemize{
\item Define a \code{State} subtype in \code{Julia} and provide the name as a character string to this function;
\item Define a \code{\link{data.frame}} of initial states;
\item Define a corresponding \code{ModelMove} subtype in \code{Julia};
\item Specify the movement model components to this function;
}

To use a new type of movement model, follow the last two steps above.

\code{\link[=sim_path_walk]{sim_path_walk()}} replaces \href{https://edwardlavender.github.io/flapper/reference/sim_path_sa.html}{\code{flapper::sim_path_sa()}}. Other \href{https://edwardlavender.github.io/flapper/reference/sim_path_-times.html}{\verb{flapper::sim_path_*()}} functions are not currently implemented in \code{\link{patter}}.
}
\seealso{
TO DO
}
\author{
Edward Lavender
}
