% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sims.R
\name{sim_path_walk}
\alias{sim_path_walk}
\title{Simulate movement paths}
\usage{
sim_path_walk(
  .bathy = spatTemplate(),
  .lonlat = FALSE,
  .origin = NULL,
  .n_step = 10L,
  .timestamp = NULL,
  .sim_length = rlen,
  .sim_angle = rangrw,
  ...,
  .n_path = 1L,
  .plot = TRUE,
  .one_page = FALSE
)
}
\arguments{
\item{.bathy}{A \code{\link{SpatRaster}} that defines the region within which movements are simulated. Movements are simulated in continuous space but restricted within the boundaries defined by \code{.bathy} and non-NA regions.}

\item{.lonlat}{A \code{logical} variable that defines whether or not \code{.bathy} uses longitude/latitude coordinates.}

\item{.origin}{(optional) A one-row, two-column matrix that defines the origin. If unsupplied, \code{.origin} is sampled at random from \code{.bathy}. One origin is used for all simulated paths (see \code{.n_path}).}

\item{.n_step}{An \code{integer} that defines the number of time steps.}

\item{.timestamp}{(optional) A vector of time stamps, one for each time step, for inclusion in the output \code{\link{data.table}} as a \code{timestamp} column.}

\item{.sim_length, .sim_angle, ...}{Functions and accompanying arguments that simulate step lengths and turning angle. Simulated step lengths should be in map units (e.g., metres) if \code{.lonlat = FALSE} or metres if \code{.lonlat = TRUE}. Turning angles should be in degrees. The functions must accept four named arguments, even if unused:
\itemize{
\item \code{.n}---an \code{integer} that defines the number of simulated outcome(s);
\item \code{.prior}---a \code{numeric} vector that defines the simulated value(s) from the previous time step;
\item \code{.t}---an \code{integer} that defines the time step;
\item \code{...}---additional arguments, if needed;
}

If \code{.prior} is used, the function should be able to handle the first time step (when \code{.prior} is set to \code{NULL}). See \code{\link[=rangcrw]{rangcrw()}} (below) for an example.

Note that \code{...} is passed down from \code{\link[=sim_path_walk]{sim_path_walk()}} to both \code{.sim_length} and \code{.sim_angle} so care is required to ensure that \code{...} parameters are handled correctly).

The following template functions are provided:
\itemize{
\item \code{\link[=rlen]{rlen()}} is an example \code{.sim_length} function that simulates step lengths from a truncated Gamma distribution (via \code{\link[=rtruncgamma]{rtruncgamma()}});
\item \code{\link[=rangrw]{rangrw()}} is an example \code{.sim_angle} function that simulates uncorrelated turning angles from a wrapped normal distribution (via \code{\link[=rwn]{rwn()}});
\item \code{\link[=rangcrw]{rangcrw()}} is an example \code{.sim_angle} function that can simulate correlated turning angles (via \code{\link[=rwn]{rwn()}});
}}

\item{.n_path}{An \code{integer} that defines the number of paths to simulate.}

\item{.plot, .one_page}{Plot options.
\itemize{
\item \code{.plot} is a \code{logical} variable that defined whether or not to plot \code{.bathy} and simulated path(s). Each path is plotted on a separate plot.
\item \code{.one_page} is a logical variable that defines whether or not to produce all plots on a single page.
}}
}
\value{
\code{\link[=sim_path_walk]{sim_path_walk()}} returns a \code{\link{data.table}} with 10 columns:
\itemize{
\item \code{path_id}--- an \code{integer} that identifies each path;
\item \code{timestep}---an \code{integer} that defines the time step;
\item \code{cell_id}, \code{cell_x}, \code{cell_y}, \code{cell_z}---\code{integer}/\code{numeric} vectors that define the locations of the simulated positions on \code{.bathy};
\item \code{x},\code{y}---\code{numeric} vectors that define simulated x and y coordinates;
\item \code{length},\code{angle}---\code{numeric} vectors that define simulated step lengths and angles (for the movement from timestep \code{t} to time step \code{t + 1});
}
}
\description{
\code{\link[=sim_path_walk]{sim_path_walk()}} facilitates the simulation of discrete-time animal movement paths from walk models (e.g., random walks, biased random walks, correlated random walks).
}
\details{
The following convenience functions are provided:
\itemize{
\item \code{\link[=rtruncgamma]{rtruncgamma()}} and \code{\link[=rwn]{rwn()}} simulate step lengths (from a truncated Gamma distribution) and turning angles (from a wrapped normal distribution);
\item \code{\link[=rlen]{rlen()}}, \code{\link[=rangrw]{rangrw()}} and \code{\link[=rangcrw]{rangcrw()}} are wrappers in the form required by \code{\link[=sim_path_walk]{sim_path_walk()}};
\item \code{\link[=sim_path_walk]{sim_path_walk()}} simulates the movement path(s);
}

Within \code{\link[=sim_path_walk]{sim_path_walk()}}, at each time step, if \code{.lonlat = FALSE}, current locations (x, y) are updated via \code{x + length * cos(angle)} and \code{y + length * sin(angle)}.

If \code{.lonlat = TRUE}, current locations are updated via \code{\link[geosphere:destPoint]{geosphere::destPoint()}}.

\code{.lonlat} support is experimental. Be especially careful with correlated random walks if \code{lonlat = TRUE}. On an ellipsoid, the initial (simulated) bearing is not the same as the final bearing, but is not currently updated.
}
\seealso{
\itemize{
\item \code{\link[=sim_array]{sim_array()}} simulates acoustic array(s);
\item \code{\link[=sim_path_walk]{sim_path_walk()}} simulates movement path(s) via a walk model;
\item \code{\link[=sim_detections]{sim_detections()}} simulates detection(s) at receivers;
\item \code{\link{skill}} functions compared simulated and reconstructed patterns to evaluate model skill;
}
}
\author{
Edward Lavender
}
