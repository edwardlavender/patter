% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pf_forward-internal.R
\name{pf_particle}
\alias{pf_particle}
\alias{.pf_rpropose_origin}
\alias{.pf_sample_origin}
\alias{.pf_particles_origin}
\alias{.pf_lik}
\alias{.pf_particles_kick}
\alias{.pf_particles_sampler}
\title{PF: particle internals}
\usage{
.pf_rpropose_origin(.particles = NULL, .obs, .t = 1L, .dlist)

.pf_sample_origin(.particles, .n, .sample, .trial_crit, .trial_count)

.pf_particles_origin(
  .particles = NULL,
  .obs,
  .t = 1L,
  .dlist,
  .rpropose = NULL,
  .dpropose = NULL,
  .likelihood,
  .sample,
  .n,
  .trial_crit,
  .trial_count,
  .control
)

.pf_lik(
  .particles,
  .obs,
  .t,
  .dlist,
  .stack,
  .diagnostics = list(),
  .trial = NA_integer_
)

.pf_particles_kick(
  .particles,
  .obs,
  .t,
  .dlist,
  .rpropose,
  .dpropose = NULL,
  .likelihood,
  .sample,
  .n,
  .trial_crit,
  .trial_count,
  .control
)

.pf_particles_sampler(
  .particles,
  .obs,
  .t,
  .dlist,
  .rpropose = NULL,
  .dpropose,
  .likelihood,
  .sample,
  .n,
  .trial_crit,
  .trial_count,
  .control
)
}
\description{
These internal functions facilitate proposals, likelihood calculations and sampling in \code{\link[=pf_forward]{pf_forward()}}.
}
\details{
Function hierarchy is as follows:
\itemize{
\item \verb{pf_rpropose_*()} functions generate proposals;
\item \verb{pf_lik_*()} functions calculate likelihoods;
\item \verb{pf_sample_*()} functions sample proposals;
\item \verb{pf_particle_*()} functions wrap proposals, likelihood calculations and sampling in an iterative framework;
}

Proposal and likelihood functions must accept the following arguments:
\itemize{
\item \code{.particles}
\item \code{.obs}
\item \code{.t}
\item \code{.dlist}
}

\code{\link[=.pf_lik]{.pf_lik()}} is a wrapper for specified likelihood functions (see \code{\link{pf_lik}}). The function returns a \code{\link{data.table}} that defines valid proposal locations, likelihoods and weights. A \code{diagnostics} attribute contains proposal diagnostics. This also requires:
\itemize{
\item \code{.stack}---a named \code{list} of likelihood functions (see \code{\link{pf_lik}}).
\item \code{.diagnostics}---an empty \code{list} used to store likelihood diagnostics, or \code{NULL}.
\item \code{.trial} An \code{integer} that distinguishes trials.
}

Sampling functions must accept:
\itemize{
\item \code{.particles}
\item \code{.n}
}

Wrapper functions must accept:
\itemize{
\item Proposal function arguments (\code{.particles}, \code{.obs}, \code{.t}, \code{.dlist});
\item Proposal functions (\code{.rpropose},\code{.dpropose});
\item Additional likelihood arguments (\code{.likelihood});
\item Sampling arguments (\code{.sample}, \code{.n});
\item Iteration arguments (\code{.trial_crit}, \code{.trial_count});
\item Control arguments (\code{.control});
}

Internal functions may support additional arguments as required.

At the first time step:
\itemize{
\item \code{\link[=.pf_rpropose_origin]{.pf_rpropose_origin()}} 'proposes' starting locations (quadrature points);
\item \code{\link[=.pf_sample_origin]{.pf_sample_origin()}} samples starting locations;
\item \code{\link[=.pf_lik]{.pf_lik()}} calculates likelihoods;
\item \code{\link[=.pf_particles_origin]{.pf_particles_origin()}} integrates \code{\link[=.pf_propose_origin]{.pf_propose_origin()}}, \code{\link[=.pf_lik]{.pf_lik()}} and \code{\link[=.pf_particles_origin]{.pf_particles_origin()}};
}

At subsequent time steps:
\itemize{
\item The exported functions \code{\link[=pf_rpropose_kick]{pf_rpropose_kick()}} and \code{\link{pf_rpropose_reachable}} propose locations;
\item \code{\link[=.pf_lik]{.pf_lik()}} calculates likelihoods;
\item \code{\link[=.pf_particles_kick]{.pf_particles_kick()}} and \code{\link[=.pf_particles_sampler]{.pf_particles_sampler()}} are the integration function;
}

\verb{pf_particles_*()} functions are similar internally, but currently separated for convenience.
}
\author{
Edward Lavender
}
\keyword{internal}
