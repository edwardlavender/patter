% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pf_setup.R
\name{pf_setup_obs}
\alias{pf_setup_obs}
\title{PF: set up movement datasets}
\usage{
pf_setup_obs(
  .dlist,
  .trim = TRUE,
  .step,
  .period = NULL,
  .mobility,
  .receiver_range
)
}
\arguments{
\item{.dlist}{A named \code{list} of data and parameters from \code{\link[=pat_setup_data]{pat_setup_data()}}. This function requires:
\itemize{
\item (optional) \code{.dlist$data$acoustics}, with the following columns: \code{timestamp} and \code{receiver_id}.
\item (optional) \code{.dlist$data$archival}, with the following columns: \code{timestamp} and \code{depth}.
}

At least one dataset must be provided. Data should be given \strong{for a single individual}. Other datasets are not currently integrated within this function but can be included afterwards (see Details).}

\item{.trim}{If both acoustic and archival data are supplied, \code{.trim} is \code{logical} variable that defines whether or not to trim the time series to the time period for which they overlap.}

\item{.step}{An character, passed to \code{\link[lubridate:period]{lubridate::period()}}, \code{\link[lubridate:round_date]{lubridate::round_date()}} and \code{\link[=seq]{seq()}} that defines the duration between sequential time steps (e.g., \code{"2 mins"}).}

\item{.period}{(optional) A length-two \code{POSIXct} vector that defines the start and end time for the timeline. If unprovided, this is defined internally according to inputted movement datasets and \code{.trim}:
\itemize{
\item If only \code{acoustics = .dlist$data$acoustics} is provided, \code{.period} is taken as \code{range(acoustics$timestamp)}.
\item If only \code{archival = .dlist$data$archival} is provided, \code{.period} is taken as \code{range(archival$timestamp)}.
\item If both datasets are provided and \code{.trim = FALSE}, \code{.period} is defined as \code{range(c(acoustics$timestamp, archival$timestamp))}.
\item If both datasets are provided and \code{.trim = TRUE}, \code{.period} is defined as the range in timestamps for the overlapping region.
}}

\item{.mobility}{A constant that defines the maximum (Euclidean) distance the individual could move in \code{.step}. See the \href{https://edwardlavender.github.io/flapper/reference/get_mvt_mobility.html}{\verb{flapper::get_mvt_mobility_*()}} functions to estimate \code{.mobility} from acoustic and/or archival data.}

\item{.receiver_range}{A constant that defines the receiver detection range. At the time of writing, a constant value across all receivers and time steps is currently assumed (although receiver-specific detection kernels within this range are supported by \code{\link[=acs_setup_detection_kernels]{acs_setup_detection_kernels()}}).}
}
\value{
The function returns a \code{\link{data.table}} with the following columns:
\itemize{
\item \code{timestep}---an \code{integer} that defines the time step;
\item \code{timestamp}---a regular sequences of \code{POSIXct} time stamps;
\item \code{date}---a \code{character} that defines the date;
\item \code{mobility}---a \code{double} that defines \code{.mobility};
}

If acoustic data is provided, the following column(s) are also included:
\itemize{
\item \code{detection_id}---an \code{integer} vector that uniquely defines each detection;
\item \code{detection}---an \code{integer} that distinguishes the time steps at which detections were (1) or were not (0) recorded;
\item \code{receiver_id}---a \code{list} that defines the receiver(s) that recorded detection(s) at each time step;
\item \code{receiver_id_next}---a \code{list} that defines the receiver(s) that recorded the next detection(s);
\item \code{buffer_past}---a \code{double} that controls container growth from the past to the present;
\item \code{buffer_future}---a \code{double} that controls container shrinkage from the future to the present;
\item \code{buffer_future_incl_gamma}---a \code{double} (\code{buffer_future} + \code{.receiver_range}) that controls container shrinkage for \code{\link[=pf_forward]{pf_forward()}};
}

These columns are required to calculate the likelihood of acoustic observations (the detection or lack thereof at each operational receiver) in \code{\link[=pf_forward]{pf_forward()}} by the default \code{\link{pf_lik}} routines.

If archival data is provided, the following column(s) are also included:
\itemize{
\item \code{depth}---a number that defines the individual's depth (m) at each time step;
}

To calculate the likelihood of archival observations in \code{\link[=pf_forward]{pf_forward()}} by the default \code{\link[=pf_lik_dc]{pf_lik_dc()}} routine, a depth envelope (as defined by \code{depth_deep} and \code{depth_shallow} columns) is also required (see \code{\link[=pf_lik_dc]{pf_lik_dc()}}).
}
\description{
This function builds a timeline of observations for particle filtering. The forward filter (\code{\link[=pf_forward]{pf_forward()}}) iterates over this timeline. At each time step, the algorithm proposes candidate locations for an individual, evaluates the likelihood of each observation (e.g., acoustic and/or archival data) in the timeline at the current time step  and (re)samples valid locations using likelihood-based weights.
}
\details{
This function defines the timeline of observations over which \code{\link[=pf_forward]{pf_forward()}} is implemented. The function implements the following routines:
\itemize{
\item Acoustic progressing (if applicable);
\itemize{
\item Acoustic time series are rounded to the nearest \code{.step};
\item All receivers that recorded detection(s) in each time interval are listed;
\item Duplicate detections (at the same receiver in the same time interval) are dropped;
}
\item Archival processing (if applicable);
\itemize{
\item Archival time series are rounded to the nearest \code{.step};
\item Multiple records (in the same time interval) are not permitted (in this instance, you need to aggregate observations manually or reduce \code{.step});
}
\item Alignment (if applicable)
\itemize{
\item Acoustic and archival time series are optionally trimmed to the time period for which they overlap;
}
\item Time series
\itemize{
\item Acoustic and/or archival time series are mapped onto a regular time series;
\item Information required by \code{\link[=pf_forward]{pf_forward()}} is added;
}
}

At the time of writing, this function only supports acoustic and archival data. However, ancillary observations can easily be included in \code{\link[=pf_forward]{pf_forward()}} as extra columns in this \code{\link{data.table}}.
}
\examples{
#### Define example datasets
# Define movement datasets for a single individual
acc  <- dat_acoustics[dat_acoustics$individual_id == 25, ]
arc  <- dat_archival[dat_archival$individual_id == 25, ]
# For example speed, focus on a subset of data
acc <- acc[as.Date(timestamp) == as.Date("2016-03-17")]
arc <- arc[as.Date(timestamp) == as.Date("2016-03-17")]
# Set up data list(see `?pat_setup_data()`)
dlist     <- pat_setup_data(.acoustics = acc,
                            .moorings = dat_moorings,
                            .archival = arc,
                            .bathy = dat_gebco(),
                            .lonlat = FALSE)

#### Example (1): Implement the function for acoustic time series only
dlist_acpf <- dlist
dlist_acpf$data$archival <- NULL
obs <- pf_setup_obs(.dlist = dlist_acpf,
                    .step = "2 mins",
                    .mobility = 500,
                    .receiver_range = 750)
head(obs)

#### Example (2): Use alternative parameters
obs <- pf_setup_obs(.dlist = dlist_acpf,
                    .step = "2 mins",
                    .mobility = 1000,
                    .receiver_range = 500)
head(obs)

#### Example (3): Implement the function for acoustic & archival time series
obs <- pf_setup_obs(.dlist = dlist,
                    .step = "2 mins",
                    .mobility = 500,
                    .receiver_range = 750)
head(obs)

#### Example (4): Include full acoustic & archival time series
obs <- pf_setup_obs(.dlist = dlist,
                    .trim = FALSE,
                    .step = "2 mins",
                    .mobility = 500,
                    .receiver_range = 750)
head(obs)
tail(obs)
}
\seealso{
The forward filtering--backward sampling algorithm samples locations (particles) that represent the possible locations of an individual through time, accounting for all data and the individual's movement.
\itemize{
\item To set up data, use \code{\link[=pat_setup_data]{pat_setup_data()}}.
\item \code{\link[=pf_forward]{pf_forward()}} implements the forward filter:
\itemize{
\item To set up an observations timeline, use \code{\link[=pf_setup_obs]{pf_setup_obs()}}.
\item For proposal (movement) models, see \code{\link{pf_propose}}.
\item For likelihood functions, to evaluate the likelihood of the data at proposal locations, see \code{\link{pf_lik}}.
\item For sampling functions, to (re)sample plausible proposal locations, see \code{\link{pf_sample}}.
\item For tuning parameters, see \code{\link{pf_opt}}.
}
\item \code{\link[=pf_backward_*]{pf_backward_*()}} refines outputs from the forward filter:
\itemize{
\item \code{\link[=pf_backward_killer]{pf_backward_killer()}} removes dead-ends;
\item \code{\link{pf_backward_sampler}}\verb{_*()} implements the backward sampler;
}
\item To reconstruct movement paths from particle samples, use \code{\link[=pf_path]{pf_path()}}.
\item To map emergent patterns of space use, use \code{\link[=pf_coord]{pf_coord()}} plus a \verb{map_*()} function, such as \code{\link[=map_pou]{map_pou()}}, \code{\link[=map_dens]{map_dens()}} and/or \code{\link{map_hr}}\verb{_()}.
\item For additional utilities, see supporting \verb{pf_*()} functions, such as \code{\link[=pf_files]{pf_files()}}, \code{\link[=pf_files_size]{pf_files_size()}}, \code{\link[=pf_plot_history]{pf_plot_history()}}, \code{\link[=pf_diag_convergence]{pf_diag_convergence()}} and \code{\link[=pf_diag_summary]{pf_diag_summary()}}.
}
}
\author{
Edward Lavender
}
