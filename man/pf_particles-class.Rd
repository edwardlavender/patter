% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pf-classes.R
\name{pf_particles-class}
\alias{pf_particles-class}
\title{PF: \code{\linkS4class{pf_particles}} objects}
\description{
An \code{S3}-\code{\link{class}} that defines the named \code{list} returned by \code{\link[=pf_filter]{pf_filter()}} and \code{\link[=pf_smoother_two_filter]{pf_smoother_two_filter()}}.
}
\section{Structure}{
\code{\linkS4class{pf_particles}} is a label used to denote outputs from selected functions in \code{\link{patter}}. The structure of this class is not strictly defined and primarily exists to streamline documentation. At the time of writing, \code{\linkS4class{pf_particles}} objects may comprise the following elements:
\itemize{
\item \code{states}---\code{NULL} or a \code{\link[data.table:data.table]{data.table::data.table}} of simulated states;
\item \code{diagnostics}---A \code{\link[data.table:data.table]{data.table::data.table}} of diagnostic statistics;
\item \code{callstats}---A \code{\link[data.table:data.table]{data.table::data.table}} of call statistics;
}
}

\section{\code{states}}{
Unless, \code{.batch} is specified in \code{\link[=pf_filter]{pf_filter()}} and \code{\link[=pf_smoother_two_filter]{pf_smoother_two_filter()}}, \code{states} is a \code{\link[data.table:data.table]{data.table::data.table}} that defines simulated particle states, with the following columns:
\itemize{
\item \code{path_id}---An \code{integer} vector that defines the particle index;
\item \code{timestep}---An \code{integer} vector that defines the time step;
\item \code{timestamp}---A \code{POSIXct} vector of time stamps;
\item Additional columns with the values of each state dimension (e.g., \code{map_value}, \code{x}, \code{y});
}

Particles are equally weighted, as the \code{.n_record} particles recorded at each time step are selected by resampling (see \code{\link[=pf_filter]{pf_filter()}}).

If the \code{.batch} is specified, \code{states} is \code{NULL}.
}

\section{\code{diagnostics}}{
\code{diagnostics} is a \code{\link[data.table:data.table]{data.table::data.table}} that stores diagnostic statistics for each time step. This includes \code{timestep}, \code{timestamp} and the following columns:
\itemize{
\item \code{ess}---A \code{numeric} vector that defines the effective sample size;
\item \code{maxlp}---A \code{numeric} vector that defines the maximum log posterior;
}
}

\section{\code{callstats}}{
\code{callstats} is a one-row \code{\link[data.table:data.table]{data.table::data.table}} that stores call statistics for the function call. This includes the following columns:
\itemize{
\item \code{timestamp}---A \code{POSIXct} value that defines the start time of the function call;
\item \code{routine}---A \code{character} vector that defines the routine:
\itemize{
\item \code{"filter: forward"};
\item \code{"filter: backward"};
\item \code{"smoother: two-filter"};
}
\item \code{n_particle}---An \code{integer} that defines the number of particles;
\item \code{n_iter}---An \code{integer} that defines the number of iterations (trials);
\item \code{error}---A \code{character} vector of error message(s);
\item \code{loglik}---A \code{double} that defines the log likelihood of the observations given the parameters:
\itemize{
\item For \code{\link[=pf_filter]{pf_filter()}}, \code{loglik} is computed (if \code{convergence = FALSE}, \code{loglik = -Inf});
\item For \code{\link[=pf_smoother_two_filter]{pf_smoother_two_filter()}}, \code{loglik} is \code{NA_real_};
}
\item \code{convergence}---A \code{logical} variable that defines whether or not the algorithm converged
\itemize{
\item For \code{\link[=pf_filter]{pf_filter()}}, convergence is \code{TRUE} if the filter reaches the end of the time series;
\item For \code{\link[=pf_smoother_two_filter]{pf_smoother_two_filter()}}, convergence is set to \code{TRUE} if proper smoothing is possible on at least 95 \% of time steps; i.e., if 95 \% of \code{diagnostics$ess} values are not \code{NaN} (see \href{https://edwardlavender.github.io/Patter.jl}{\code{Patter.particle_smoother_two_filter()}});
}
\item \code{time}---A \code{numeric} value that defines the duration (s) of the function call;
}
}

\seealso{
Particle filters and smoothers sample states (particles) that represent the possible locations of an individual through time, accounting for all data and the individual's movement.
\itemize{
\item To simulate artificial datasets, see \verb{sim_*()} functions (especially \code{\link[=sim_path_walk]{sim_path_walk()}}, \code{\link[=sim_array]{sim_array()}} and \code{\link[=sim_observations]{sim_observations()}}).
\item To assemble real-world datasets for the filter, see \code{\link{assemble}}\verb{_*()} functions.
\item \code{\link[=pf_filter]{pf_filter()}} runs the filter:
\itemize{
\item For state types, see \code{\link{State}};
\item For observation models, see \code{\link{ModelObs}};
\item For movement models, see \code{\link{ModelMove}};
}
\item To run particle smoothing, use \code{\link[=pf_smoother_two_filter]{pf_smoother_two_filter()}}.
\item To map emergent patterns of space use, use a \verb{map_*()} function (such as \code{\link[=map_pou]{map_pou()}}, \code{\link[=map_dens]{map_dens()}} and \code{\link[=map_hr]{map_hr()}}).
}
}
\author{
Edward Lavender
}
